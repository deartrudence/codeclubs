<div class="wrapper wrapper--secondary">
    <h2 class="about-heading">About Us</h2>
  <div class="wrapper-flex as--about">    
    <div>
      <p><strong>Teachers Learning Code</strong> is designed by Ladies Learning Code and proudly supported by Scotiabank for educators focused on inspiring kids to be builders – not just consumers - of technology through coding activities and challenges.</p> 
      <p class="special">It’s all about using technology and changing the world through teamwork, creativity, and, of course, code.</p>
      <p>Whether you’re a teacher in a classroom, a program coordinator at a community centre, a home-schooling parent or a Girl Guide troop leader - we’ve put together a comprehensive how-to guide and lesson planning tool to help you teach kids to code. </p>
    </div>
    <%= image_tag 'tlc-circlehash.svg'%>
  </div>
  <div class="wrapper--flex">
    <div class="col--two as--about-guide-wrap">
      <h2 class="about-heading">Download the Guide</h2>
      <div class="as--about-guide">
        <div><%= image_tag 'tlc-howtoguide-mockup.png'%></div>
        <div>
          <p>We’ve combined our experiences teaching thousands of youth across the country to code, our tips and tricks to get started, resources to familiarize yourself with code, plus lots of easy to follow and even easier to implement coding activities to empower and teach the future generation of technologists across Canada.</p>
          <p class="special">This guide is your jumping off point - where you choose to take your program is up to you!</p>
          <p>We encourage you to use as much or as little of the guide as you like, to remix the challenges we’ve created or create new ones and share them with our community.</p>
          <a href="#" class="button button--tertiary as--about-buttons">Download<br>The Guide</a>
        </div>
      </div>
    </div>
    <div class="as--about-training">
      <div class="as--training">
        <h2>Request Training</h2>
        <p>Our training workshops across the country are led by industry leading experts and educators from our community. We’ll delve into our TLC guide and lesson plans while teaching educators how to use Scratch - a popular program to teach kids to code, how to map coding to the curriculum and how to introduce coding to your students!</p>
        <div>
          <a href="http://ladieslearningcode.com/" class="button button--tertiary as--about-buttons" target="_blank">upcoming<br>workshops</a>
          <a href="#" class="button button--tertiary as--about-buttons" target="_blank">Request<br>a Workshop</a>
        </div>
      </div>
      <div class="as--training">
        <h2>Join Our Online Network</h2>
        <p>Ladies Learning Code was built for the community by the community and it has made all of the difference for our learners’ success.  Join our Teachers Learning Code community forum, a Slack Team, to connect with other educators across the country, share resources and ask questions to our talented and generous community of developers and technical educators coast to coast.</p>
        <a href="#" class="button button--tertiary as--about-buttons" target="_blank">Join<br>the Forum</a>
      </div>
    </div>
  </div>
 
</div>

<script>
   // 1. Enter sheet name where data is to be written below
          var SHEET_NAME = "Sheet1";
           
  //  2. Run > setup
  //
  //  3. Publish > Deploy as web app 
  //    - enter Project Version name and click 'Save New Version' 
  //    - set security level and enable service (most likely execute as 'me' and access 'anyone, even anonymously) 
  //
  //  4. Copy the 'Current web app URL' and post this in your form/script action 
  //
  //  5. Insert column names on your destination sheet matching the parameter names of the data you are passing in (exactly matching case)
   
  var SCRIPT_PROP = PropertiesService.getScriptProperties(); // new property service
   
  // If you don't want to expose either GET or POST methods you can comment out the appropriate function
  function doGet(e){
    return handleResponse(e);
  }
   
  function doPost(e){
    return handleResponse(e);
  }
   
  function handleResponse(e) {
    // shortly after my original solution Google announced the LockService[1]
    // this prevents concurrent access overwritting data
    // [1] http://googleappsdeveloper.blogspot.co.uk/2011/10/concurrency-and-google-apps-script.html
    // we want a public lock, one that locks for all invocations
    var lock = LockService.getPublicLock();
    lock.waitLock(30000);  // wait 30 seconds before conceding defeat.
     
    try {
      // next set where we write the data - you could write to multiple/alternate destinations
      var doc = SpreadsheetApp.openById(SCRIPT_PROP.getProperty("key"));
      var sheet = doc.getSheetByName(SHEET_NAME);
       
      // we'll assume header is in row 1 but you can override with header_row in GET/POST data
      var headRow = e.parameter.header_row || 1;
      var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];
      var nextRow = sheet.getLastRow()+1; // get next row
      var row = []; 
      // loop through the header columns
      for (i in headers){
        if (headers[i] == "Timestamp"){ // special case if you include a 'Timestamp' column
          row.push(new Date());
        } else { // else use header name to get data
          row.push(e.parameter[headers[i]]);
        }
      }
      // more efficient to set values as [][] array than individually
      sheet.getRange(nextRow, 1, 1, row.length).setValues([row]);
      // return json success results
      return ContentService
            .createTextOutput(JSON.stringify({"result":"success", "row": nextRow}))
            .setMimeType(ContentService.MimeType.JSON);
    } catch(e){
      // if error return this
      return ContentService
            .createTextOutput(JSON.stringify({"result":"error", "error": e}))
            .setMimeType(ContentService.MimeType.JSON);
    } finally { //release lock
      lock.releaseLock();
    }
  }
   
  function setup() {
      var doc = SpreadsheetApp.getActiveSpreadsheet();
      SCRIPT_PROP.setProperty("key", doc.getId());
  }
</script>