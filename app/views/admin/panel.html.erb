<div class="wrapper">

  <h1 class="as--admin-title">Admin Dashboard</h1>

  <ul class="tabs wrapper--flex">
    <li class="tab-link current" data-tab="lessons-tab">Lesson Approval</li>
    <li class="tab-link" data-tab="users-tab">User Master List</li>
    <li class="tab-link" data-tab="glossary-tab">Glossary</li>
  </ul>

  <div id="lessons-tab" class="tab-content">
    <%= form_tag(admin_path, method: :get, remote: true) do %>
    <div class="as--filter-wrap">
      <div class="as--search-wrap">
        <%= text_field_tag :search,nil , class: 'lesson_search' %>
        <%= submit_tag 'search', class:"button button--primary" %>
      </div>
    </div>
    <% end %>
    
    <div class="list--header list--header--lessons-admin flex--wrapper">
      <div>
        <%= form_tag(admin_path, method: :get, remote: true) do %>
          <%= label :status, 'Status' %><i class="fa fa-sort" aria-hidden="true"></i>
          <%= check_box :status, 'Status', :onchange => "ajaxSubmit(this.form)", class: 'hidden' %>
          <%= hidden_field :lesson_filters, 'filter_options' %>
        <% end %>
      </div>
      <div>Verified?</div>
      <div>
        <%= form_tag(admin_path, method: :get, remote: true) do %>
          <%= label :lesson_title, 'Lesson Title' %><i class="fa fa-sort" aria-hidden="true"></i>
          <%= check_box :lesson_title, 'Lesson Title', :onchange => "ajaxSubmit(this.form)", class: 'hidden' %>
          <%= hidden_field :lesson_filters, 'filter_options' %>
        <% end %>
      </div>
      <div>Author</div>
      <div>
        <%= form_tag(admin_path, method: :get, remote: true) do %>
          <%= label :created, 'Created' %><i class="fa fa-sort" aria-hidden="true"></i>
          <%= check_box :created, 'Created', :onchange => "ajaxSubmit(this.form)", class: 'hidden' %>
          <%= hidden_field :lesson_filters, 'filter_options' %>
        <% end %>
      </div>  
      <div>Delete?</div>
    </div>
    <div id="lessons-admin" class="as--lessons-admin">
      <%= render 'lessons_admin' %>
    </div>
  </div>

  <div id="glossary-tab" class="tab-content">
    <h2>Glossary</h2>
    <div class="add-new-container">
      <h3>Add Term</h3>
      <%= simple_form_for(@glossary, remote: true) do |f| %>
        <%= f.error_notification %>
        <div class="wrapper--flex">
          <div class="as--glossary-input">
            <%= f.input :term, placeholder: 'Enter new term here' %>
          </div>
          <div class="as--glossary-textarea">
            <%= f.input :definition, placeholder: 'Enter new term definition here'%>
          </div>

          <div class="form-actions">
            <%= f.submit 'add', class: 'button button--submit' %>
          </div>
        </div>
      <% end %>
    </div>
    <div id="glossary-admin">
      <%= render 'glossaries_admin'%>
    </div>
  </div>

  <div id="users-tab" class="tab-content">
    <div class="admin--users-export">
      <h2>Export Data</h2>
      <%= form_tag(download_user_list_path(remote: true, format: :csv), method: :post) do %>
        <div class="users-exports-container">
          
          <div class="wrapper--flex">
            <% Profile::CSV_OPTIONS.each do |option|%>
              <div>  
                <%= check_box_tag('csv_options[]', option)%>
                <label for="csv_options"><%= option.humanize %></label>
              </div>
            <% end %>
          </div>
          <div>
            <%= submit_tag 'Export CSV', class: "button button--primary" %>
          </div>
        </div>
      <% end %>
    </div>
    <%= form_tag(admin_path, method: :get, remote: true) do %>
      <%= text_field_tag :user_search, nil, class: 'user_search' %>
      <%= submit_tag 'search', class:"button button--primary" %>
    <% end %>
    <div class="list--header list--header--users flex--wrapper">
      <div>
        <%= form_tag(admin_path, method: :get, remote: true) do %>
          <%= label :first_name, 'First Name' %>
          <%= check_box :first_name, 'First Name', :onchange => "ajaxSubmit(this.form)", class: 'hidden' %>
          <%= hidden_field :user_filters, 'filter_options' %>
        <% end %>
      </div>
      <div>
        <%= form_tag(admin_path, method: :get, remote: true) do %>
          <%= label :last_name, 'Last Name' %>
          <%= check_box :last_name, 'Last Name', :onchange => "ajaxSubmit(this.form)", class: 'hidden' %>
          <%= hidden_field :user_filters, 'filter_options' %>
        <% end %>
      </div>
      <div>
        <%= form_tag(admin_path, method: :get, remote: true) do %>
          <%= label :user_email, 'email' %>
          <%= check_box :user_email, 'email', :onchange => "ajaxSubmit(this.form)", class: 'hidden' %>
          <%= hidden_field :user_filters, 'filter_options' %>
        <% end %>
      </div>
      <div>User Type</div>
      <div>
        <%= form_tag(admin_path, method: :get, remote: true) do %>
          <%= label :opt_in, 'Opt In?' %>
          <%= check_box :opt_in, 'Opt In?', :onchange => "ajaxSubmit(this.form)", class: 'hidden' %>
          <%= hidden_field :user_filters, 'filter_options' %>
        <% end %>
      </div>
    </div>
    <div id="users-admin">
      <%= render 'users_admin' %>
    </div>

  </div>

  <div id="mailing-tab" class="tab-content">
    <h2>Mailing List</h2>
    <%= link_to 'Download', download_mailing_list_path(:format => 'csv'), class: "button button--primary" %>
    <%= form_tag(admin_path, method: :get, remote: true) do %>
      <%= text_field_tag :user_search, nil,id: 'mailer_search', name: 'mailer_search', class: 'mailer_search' %>
      <%= submit_tag 'search', class:"button button--primary mailer_search" %>
    <% end %>
    <div id="mailers-admin">
      <%= render 'mailers_admin' %>
    </div>

  </div>

  <div id="workshops-tab" class="tab-content">
    <h2>Workshops List</h2>
    
    <div id="workshops-admin">
      <%= render 'workshops_admin' %>
    </div>

  </div>
  <div id="download-tab" class="tab-content">
    <h2>Downloaded PDF</h2>
    
    <div id="download-admin">
      <%= render 'download_admin' %>
    </div>

  </div>
</div>


<script>
      $('.lesson_approved_check').change(function(){
        lesson = $(this).attr('data')
        approved = $(this)[0].checked
        $.ajax({
          url: '/admin',
          type: 'get',
          data: {
            lesson: lesson,
            approved: approved
          }
        })
      });

      $('.lesson_filter').on('change', function(){
        filter = $(this).val()
        $.ajax({
          url: '',
          type: 'get',
          data: {
            filter: filter
          }
        })
      });

      $('.lesson_search').on('submit', function(){
        query = $(this).val()
        $.ajax({
          url: '',
          type: 'get',
          data: {
            search: query
          }
        })
      })

      $('.user_search').on('submit', function(){
        query = $(this).val()
        $.ajax({
          url: '',
          type: 'get',
          data: {
            user_search: query
          }
        })
      })

      $('.mailer_search').on('submit', function(){
        query = $(this).val()
        $.ajax({
          url: '',
          type: 'get',
          data: {
            mailer_search: query
          }
        })
      })

    $('ul.tabs li').click(function(){
      var tab_id = $(this).attr('data-tab');

      $('ul.tabs li').removeClass('current');
      $('.tab-content').removeClass('current');

      $(this).addClass('current');
      $("#"+tab_id).addClass('current');
    })

    function ajaxSubmit(form) {
      var data = $(form).serialize()
      $.ajax({
        url: '',  
        method: 'GET', 
        data: data
      });
    }

    function getHashParams() {
      var hashParams = {};
      var e,
          a = /\+/g,  // Regex for replacing addition symbol with a space
          r = /([^&;=]+)=?([^&;]*)/g,
          d = function (s) { return decodeURIComponent(s.replace(a, " ")); },
          q = window.location.hash.substring(1);

      while (e = r.exec(q))
         hashParams[d(e[1])] = d(e[2]);

      return hashParams;
    }

    function updateTabWithHash() {
      if (window.location.hash){
        var tab = getHashParams()['tab']
        tab_id = tab + '-tab'

        // remove class from tabs currently set as current
        $('ul.tabs li').removeClass('current');
        $('.tab-content').removeClass('current');

        // add current class to active tab based on hash
        $('[data-tab="'+ tab_id + '"]').addClass('current');
        $('#'+tab_id).addClass('current');

      }
    }


    function updateQueryStringParameter(uri, key, value) {
      var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
      var separator = uri.indexOf('?') !== -1 ? "&" : "?";
      if (uri.match(re)) {
        
        var newUri =  uri.replace(re, '$1' + key + "=" + value + '$2');
        return parseQuerystring(newUri)
      }
      else {
        console.log(uri, 'uri')
        return uri + separator + key + "=" + value;
      }
    }



    // EVENT LISTENERS ETC


    $('ul.tabs li').click(function(){
      var tab_id = $(this).attr('data-tab');
      var tab = tab_id.split('-')[0]
      window.location.hash = 'tab=' + tab
    })

    $(window).on('hashchange', function(){
     updateTabWithHash();
    })

    $(document).on('ready page:load', function(){
      updateTabWithHash();
      var hashID = window.location.hash.substring(1)
    })

  // })
</script>